name: Android CI

on:
  push:
    branches: [ main, master ] # Adjust if your main branch has a different name
  pull_request:
    branches: [ main, master ] # Adjust if your main branch has a different name

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Setup Android SDK
      uses: android-actions/setup-android@v2
      # You can specify SDK version, NDK version, etc. here if needed
      # env:
      #   ANDROID_SDK_ROOT: ${{ runner.temp }}/android-sdk # Example, adjust if necessary

    # The android-actions/setup-android action usually sets ANDROID_SDK_ROOT.
    # If not, or if a local.properties is strictly needed by your setup:
    - name: Create local.properties for SDK
      run: |
        echo "sdk.dir=${ANDROID_SDK_ROOT}" > app/local.properties
      # If ANDROID_SDK_ROOT is not automatically set by the above action,
      # you might need to find its location. Common is /usr/local/lib/android/sdk
      # For example: echo "sdk.dir=/usr/local/lib/android/sdk" > app/local.properties
      # Or, if using a specific path from android-actions/setup-android:
      # echo "sdk.dir=${{ env.ANDROID_SDK_PATH }}" > app/local.properties

    # Grant execute permission for gradlew if it were present
    # - name: Grant gradlew permissions
    #   if: steps.checkout.outputs.files_exists == 'true' && hashFiles('gradlew') != ''
    #   run: chmod +x gradlew

    # Create placeholder drawable and icon files that were causing issues locally
    # This ensures the build doesn't fail due to missing template/placeholder icons
    - name: Create placeholder icon drawables
      run: |
        mkdir -p app/src/main/res/drawable
        echo '<vector xmlns:android="http://schemas.android.com/apk/res/android" android:height="108dp" android:width="108dp" android:viewportHeight="108" android:viewportWidth="108"><path android:fillColor="#008577" android:pathData="M0,0h108v108h-108z"/></vector>' > app/src/main/res/drawable/ic_launcher_foreground.xml

        mkdir -p app/src/main/res/mipmap-anydpi-v26
        echo '<?xml version="1.0" encoding="utf-8"?>
        <adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
            <background android:drawable="@color/colorPrimary"/>
            <foreground android:drawable="@drawable/ic_launcher_foreground"/>
        </adaptive-icon>' > app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml

        echo '<?xml version="1.0" encoding="utf-8"?>
        <adaptive-icon xmlns:android="http://schemas.android.com/apk/res/android">
            <background android:drawable="@color/colorPrimary"/>
            <foreground android:drawable="@drawable/ic_launcher_foreground"/>
        </adaptive-icon>' > app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml

    - name: Build with Gradle
      run: |
        # Since gradlew is not in the repo, we rely on the Gradle installed in the runner (setup by setup-java with cache: gradle)
        # If your project absolutely needs gradlew, it should be committed to the repository.
        gradle :app:assembleDebug --stacktrace
      # If gradlew existed:
      # run: ./gradlew assembleDebug --stacktrace

    - name: Upload APK artifact
      uses: actions/upload-artifact@v3
      with:
        name: app-debug.apk
        path: app/build/outputs/apk/debug/app-debug.apk
        if-no-files-found: error # Optional: fail if APK not found
        retention-days: 7 # Optional: how long to keep the artifact
